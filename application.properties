server.port=6043
#server.ssl.key-alias=tomcat
#server.ssl.key-store-password=pass@123
#server.ssl.key-store=classpath:tls/afex_api_uat.p12
#server.ssl.key-store-provider=PKCS12
#server.ssl.key-store-type=PKCS12


server.ssl.key-store-password=password
server.ssl.key-store=F:\\selfsigned-cert\\server.p12
server.ssl.key-store-type=PKCS12
server.ssl.ciphers=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA



spring.application.name=EKYC-APP
logging.config=F:\\alfardan\\GIT-WORKSPACE\\logback-spring.xml

afex.url.login=https://172.31.1.221:9043/ords/afexremit/ekyc/v1/login
afex.url.register=https://172.31.1.221:9043/ords/afexremit/ekyc/v1/register
afex.url.devicestatus=https://172.31.1.221:9043/ords/afexremit/ekyc/v1/tabletstatus
afex.sharedKey=UAEPASS@123
afex.acquirerid=UAEPASS
url.api=/Internal/afexremit/ekyc/api/
afex.UPLOADED_FOLDER=C:\\ica_logs\\



# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses.
spring.http.encoding.force=true

#spring.http.multipart.max-file-size=5MB

#spring.http.multipart.max-file-size=5MB
#spring.http.multipart.max-request-size=5MB
#spring.http.multipart.enabled=true
   


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=C:\\ica_logs\\
